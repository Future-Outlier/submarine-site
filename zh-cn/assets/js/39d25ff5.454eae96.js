"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2659],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return u}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var m=r.createContext({}),o=function(e){var t=r.useContext(m),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=o(e.components);return r.createElement(m.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,m=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),d=o(n),u=a,k=d["".concat(m,".").concat(u)]||d[u]||s[u]||i;return n?r.createElement(k,l(l({ref:t},c),{},{components:n})):r.createElement(k,l({ref:t},c))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=d;var p={};for(var m in t)hasOwnProperty.call(t,m)&&(p[m]=t[m]);p.originalType=e,p.mdxType="string"==typeof e?e:a,l[1]=p;for(var o=2;o<i;o++)l[o]=n[o];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8068:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return m},default:function(){return u},frontMatter:function(){return p},metadata:function(){return o},toc:function(){return s}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),l=["components"],p={title:"Experiment Client"},m=void 0,o={unversionedId:"userDocs/submarine-sdk/experiment-client",id:"version-0.7.0/userDocs/submarine-sdk/experiment-client",title:"Experiment Client",description:"\x3c!--",source:"@site/versioned_docs/version-0.7.0/userDocs/submarine-sdk/experiment-client.md",sourceDirName:"userDocs/submarine-sdk",slug:"/userDocs/submarine-sdk/experiment-client",permalink:"/zh-cn/docs/0.7.0/userDocs/submarine-sdk/experiment-client",editUrl:"https://github.com/apache/submarine/edit/master/website/versioned_docs/version-0.7.0/userDocs/submarine-sdk/experiment-client.md",tags:[],version:"0.7.0",frontMatter:{title:"Experiment Client"},sidebar:"docs",previous:{title:"Custom Configuation",permalink:"/zh-cn/docs/0.7.0/gettingStarted/helm"},next:{title:"Submarine CLI",permalink:"/zh-cn/docs/0.7.0/userDocs/submarine-sdk/submarine-cli"}},c={},s=[{value:"class ExperimentClient()",id:"class-experimentclient",level:2},{value:"<code>create_experiment(experiment_spec) -&gt; dict</code>",id:"create_experimentexperiment_spec---dict",level:4},{value:"<code>patch_experiment(id, experiment_spec) -&gt; dict</code>",id:"patch_experimentid-experiment_spec---dict",level:4},{value:"<code>get_experiment(id) -&gt; dict</code>",id:"get_experimentid---dict",level:4},{value:"<code>list_experiments(status) -&gt; list[dict]</code>",id:"list_experimentsstatus---listdict",level:4},{value:"<code>delete_experiment(id) -&gt; dict</code>",id:"delete_experimentid---dict",level:4},{value:"<code>get_log(id, onlyMaster)</code>",id:"get_logid-onlymaster",level:4},{value:"<code>list_log(status)</code>",id:"list_logstatus",level:4},{value:"<code>wait_for_finish(id, polling_interval)</code>",id:"wait_for_finishid-polling_interval",level:4}],d={toc:s};function u(e){var t=e.components,n=(0,a.Z)(e,l);return(0,i.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"class-experimentclient"},"class ExperimentClient()"),(0,i.kt)("p",null,"Client of a submarine server that creates and manages experients and logs."),(0,i.kt)("h4",{id:"create_experimentexperiment_spec---dict"},(0,i.kt)("inlineCode",{parentName:"h4"},"create_experiment(experiment_spec) -> dict")),(0,i.kt)("p",null,"Create an experiment."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"center"},"Param"),(0,i.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"),(0,i.kt)("th",{parentName:"tr",align:"center"},"Default Value"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"experiment_spec"),(0,i.kt)("td",{parentName:"tr",align:"center"},"Dict"),(0,i.kt)("td",{parentName:"tr",align:null},"Submarine experiment spec. More detailed information can be found at ",(0,i.kt)("a",{parentName:"td",href:"/zh-cn/docs/0.7.0/api/experiment"},"Experiment API")),(0,i.kt)("td",{parentName:"tr",align:"center"},"x")))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns")),(0,i.kt)("p",null,"The detailed info about the submarine experiment."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'from submarine import *\nclient = ExperimentClient()\nclient.create_experiment({\n  "meta": {\n    "name": "tf-mnist-json",\n    "namespace": "default",\n    "framework": "TensorFlow",\n    "cmd": "python /var/tf_mnist/mnist_with_summaries.py --log_dir=/train/log --learning_rate=0.01 --batch_size=150",\n    "envVars": {\n      "ENV_1": "ENV1"\n    }\n  },\n  "environment": {\n    "image": "apache/submarine:tf-mnist-with-summaries-1.0"\n  },\n  "spec": {\n    "Ps": {\n      "replicas": 1,\n      "resources": "cpu=1,memory=1024M"\n    },\n    "Worker": {\n      "replicas": 1,\n      "resources": "cpu=1,memory=1024M"\n    }\n  }\n})\n')),(0,i.kt)("br",null),(0,i.kt)("h4",{id:"patch_experimentid-experiment_spec---dict"},(0,i.kt)("inlineCode",{parentName:"h4"},"patch_experiment(id, experiment_spec) -> dict")),(0,i.kt)("p",null,"Patch an experiment."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"center"},"Param"),(0,i.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"),(0,i.kt)("th",{parentName:"tr",align:"center"},"Default Value"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"id"),(0,i.kt)("td",{parentName:"tr",align:"center"},"String"),(0,i.kt)("td",{parentName:"tr",align:null},"Submarine experiment id."),(0,i.kt)("td",{parentName:"tr",align:"center"},"x")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"experiment_spec"),(0,i.kt)("td",{parentName:"tr",align:"center"},"Dict"),(0,i.kt)("td",{parentName:"tr",align:null},"Submarine experiment spec. More detailed information of Submarine experiment spec can be found at ",(0,i.kt)("a",{parentName:"td",href:"/zh-cn/docs/0.7.0/api/experiment"},"Experiment API"),"."),(0,i.kt)("td",{parentName:"tr",align:"center"},"x")))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns")),(0,i.kt)("p",null,"The detailed info about the submarine experiment."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'client.patch_experiment("experiment_1626160071451_0008", {\n  "meta": {\n    "name": "tf-mnist-json",\n    "namespace": "default",\n    "framework": "TensorFlow",\n    "cmd": "python /var/tf_mnist/mnist_with_summaries.py --log_dir=/train/log --learning_rate=0.01 --batch_size=150",\n    "envVars": {\n      "ENV_1": "ENV1"\n    }\n  },\n  "environment": {\n    "image": "apache/submarine:tf-mnist-with-summaries-1.0"\n  },\n  "spec": {\n    "Worker": {\n      "replicas": 2,\n      "resources": "cpu=1,memory=1024M"\n    }\n  }\n})\n')),(0,i.kt)("br",null),(0,i.kt)("h4",{id:"get_experimentid---dict"},(0,i.kt)("inlineCode",{parentName:"h4"},"get_experiment(id) -> dict")),(0,i.kt)("p",null,"Get the experiment's detailed info by id."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"center"},"Param"),(0,i.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"),(0,i.kt)("th",{parentName:"tr",align:"center"},"Default Value"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"id"),(0,i.kt)("td",{parentName:"tr",align:"center"},"String"),(0,i.kt)("td",{parentName:"tr",align:null},"Submarine experiment id."),(0,i.kt)("td",{parentName:"tr",align:"center"},"x")))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns")),(0,i.kt)("p",null,"The detailed info about the submarine experiment."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'experiment = client.get_experiment("experiment_1626160071451_0008")\n')),(0,i.kt)("br",null),(0,i.kt)("h4",{id:"list_experimentsstatus---listdict"},(0,i.kt)("inlineCode",{parentName:"h4"},"list_experiments(status) -> list[dict]")),(0,i.kt)("p",null,"List all experiment for the user."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"center"},"Param"),(0,i.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"),(0,i.kt)("th",{parentName:"tr",align:"center"},"Default Value"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"status"),(0,i.kt)("td",{parentName:"tr",align:"center"},"Optional","[str]"),(0,i.kt)("td",{parentName:"tr",align:null},"Accepted, Created, Running, Succeeded, Deleted."),(0,i.kt)("td",{parentName:"tr",align:"center"},"None")))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns")),(0,i.kt)("p",null,"List of submarine experiments."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"experiments = client.list_experiments()\n")),(0,i.kt)("br",null),(0,i.kt)("h4",{id:"delete_experimentid---dict"},(0,i.kt)("inlineCode",{parentName:"h4"},"delete_experiment(id) -> dict")),(0,i.kt)("p",null,"Delete the submarine experiment."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"center"},"Param"),(0,i.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"),(0,i.kt)("th",{parentName:"tr",align:"center"},"Default Value"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"id"),(0,i.kt)("td",{parentName:"tr",align:"center"},"String"),(0,i.kt)("td",{parentName:"tr",align:null},"Submarine experiment id."),(0,i.kt)("td",{parentName:"tr",align:"center"},"x")))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns")),(0,i.kt)("p",null,"The detailed info about the deleted submarine experiment."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'client.delete_experiment("experiment_1626160071451_0008")\n')),(0,i.kt)("br",null),(0,i.kt)("h4",{id:"get_logid-onlymaster"},(0,i.kt)("inlineCode",{parentName:"h4"},"get_log(id, onlyMaster)")),(0,i.kt)("p",null,"Print training logs of all pod of the experiment.\nBy default print all the logs of Pod."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"center"},"Param"),(0,i.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"),(0,i.kt)("th",{parentName:"tr",align:"center"},"Default Value"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"id"),(0,i.kt)("td",{parentName:"tr",align:"center"},"String"),(0,i.kt)("td",{parentName:"tr",align:null},"Submarine experiment id."),(0,i.kt)("td",{parentName:"tr",align:"center"},"x")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"onlyMaster"),(0,i.kt)("td",{parentName:"tr",align:"center"},"Optional","[bool]"),(0,i.kt)("td",{parentName:"tr",align:null},'By default include pod log of "master" which might be Tensorflow PS/Chief or PyTorch master.'),(0,i.kt)("td",{parentName:"tr",align:"center"},"x")))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Return")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"The info of pod logs")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'client.get_log("experiment_1626160071451_0009")\n')),(0,i.kt)("br",null),(0,i.kt)("h4",{id:"list_logstatus"},(0,i.kt)("inlineCode",{parentName:"h4"},"list_log(status)")),(0,i.kt)("p",null,"List experiment log."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"center"},"Param"),(0,i.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"),(0,i.kt)("th",{parentName:"tr",align:"center"},"Default Value"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"status"),(0,i.kt)("td",{parentName:"tr",align:"center"},"String"),(0,i.kt)("td",{parentName:"tr",align:null},"Accepted, Created, Running, Succeeded, Deleted."),(0,i.kt)("td",{parentName:"tr",align:"center"},"x")))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns")),(0,i.kt)("p",null,"List of submarine experiment logs."),(0,i.kt)("p",null,"Example"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'logs = client.list_log("Succeeded")\n')),(0,i.kt)("br",null),(0,i.kt)("h4",{id:"wait_for_finishid-polling_interval"},(0,i.kt)("inlineCode",{parentName:"h4"},"wait_for_finish(id, polling_interval)")),(0,i.kt)("p",null,"Waits until the experiment is finished or failed."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"center"},"Param"),(0,i.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"),(0,i.kt)("th",{parentName:"tr",align:"center"},"Default Value"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"id"),(0,i.kt)("td",{parentName:"tr",align:"center"},"String"),(0,i.kt)("td",{parentName:"tr",align:null},"Submarine experiment id."),(0,i.kt)("td",{parentName:"tr",align:"center"},"x")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"polling_interval"),(0,i.kt)("td",{parentName:"tr",align:"center"},"Optional","[int]"),(0,i.kt)("td",{parentName:"tr",align:null},"How many seconds between two polls for the status of the experiment."),(0,i.kt)("td",{parentName:"tr",align:"center"},"10")))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns")),(0,i.kt)("p",null,"Submarine experiment logs."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'logs = client.wait_for_finish("experiment_1626160071451_0009", 5)\n')),(0,i.kt)("br",null))}u.isMDXComponent=!0}}]);